# Adapted from the original source code found here: https://gist.github.com/pauloricardomg/7084524
upstream stagenet {
    server xmr-lux.boldsuck.org:38081;
    server stagenet.melo.tools:38081;
}

server {
    server_name localhost;
    listen 0.0.0.0:38081;

    location ~ ^/(json_rpc|get_height|getblocks.bin|gettransactions|get_output_distribution.bin|get_blocks.bin|get_blocks_by_height.bin|get_hashes.bin|gethashes.bin|get_o_indexes.bin|get_outs.bin|get_transactions|get_alt_blocks_hashes|is_key_image_spent|sendrawtransaction|send_raw_transaction|start_mining|stop_mining|mining_status|save_bc|get_peer_list|set_log_hash_rate|set_log_level|set_log_categories|get_transaction_pool|get_transaction_pool_hashes.bin|get_transaction_pool_stats|stop_daemon|get_info|get_limit|set_limit|out_peers|in_peers|start_save_graph|stop_save_graph|get_outs|update) {
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Content-Type application/json;

        # Nginx doesn't support nested If statements, so we
        # concatenate compound conditions on the $cors variable
        # and process later

        # If request comes from allowed subdomain
        # (*.mckinsey.com) then we enable CORS
        if ($http_origin ~* (https://xmr.gift$)) {
            set $cors "1";
        }

        # OPTIONS indicates a CORS pre-flight request
        if ($request_method = 'OPTIONS') {
            set $cors "${cors}o";
        }

        # Append CORS headers to any request from
        # allowed CORS domain, except OPTIONS
        if ($cors = "1") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Credentials true;
            proxy_pass http://stagenet;
        }

        # OPTIONS (pre-flight) request from allowed
        # CORS domain. return response directly
        if ($cors = "1o") {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE';
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Headers Origin,Content-Type,Accept;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # Requests from non-allowed CORS domains
        proxy_pass http://stagenet;
    }
}
